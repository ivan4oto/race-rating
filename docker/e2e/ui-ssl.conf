
upstream api_upstream {
    server api:8080;
    keepalive 32;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 443 ssl http2;
    server_name _; # catch-all for HTTPS

    ssl_certificate     /etc/nginx/certs/ui.crt;
    ssl_certificate_key /etc/nginx/certs/ui.key;
    ssl_protocols       TLSv1.2 TLSv1.3;

    root  /usr/share/nginx/html;
    index index.html;

    # Single-page app fallback (serves index.html for unknown routes)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # ---------- Common proxy settings ----------
    # Use with: include /etc/nginx/snippets/proxy-common.conf;
    # If you don't use snippets, keep this block inline as shown below.
    # ------------------------------------------

    # API prefixes → API container
    location /api/ {
        # Preserve the /api prefix when forwarding
        # /api/foo -> http://api:8080/api/foo
        proxy_pass http://api_upstream/api/;
        proxy_http_version 1.1;
        proxy_set_header Host              $host;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        $connection_upgrade;
        proxy_redirect off;
    }

    location /auth/ {
        proxy_pass http://api_upstream/auth/; # /auth/foo -> /auth/foo
        proxy_http_version 1.1;
        proxy_set_header Host              $host;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        $connection_upgrade;
        proxy_redirect off;
    }

    location /oauth2/ {
        proxy_pass http://api_upstream/oauth2/;
        proxy_http_version 1.1;
        proxy_set_header Host              $host;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        $connection_upgrade;
        proxy_redirect off;
    }

    location = /forgot-password {
        proxy_pass http://api_upstream/forgot-password;
        proxy_http_version 1.1;
        proxy_set_header Host              $host;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_redirect off;
    }

    location = /reset-password {
        proxy_pass http://api_upstream/reset-password;
        proxy_http_version 1.1;
        proxy_set_header Host              $host;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_redirect off;
    }

    location /admin/ {
        proxy_pass http://api_upstream/admin/;
        proxy_http_version 1.1;
        proxy_set_header Host              $host;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_redirect off;
    }

    location /actuator/ {
        proxy_pass http://api_upstream/actuator/;
        proxy_http_version 1.1;
        proxy_set_header Host              $host;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_redirect off;
    }
}

# HTTP → HTTPS redirect
server {
    listen 80;
    server_name _; # catch-all for HTTP
    return 301 https://$host$request_uri;
}
