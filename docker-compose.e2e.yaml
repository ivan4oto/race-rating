version: "3.9"
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: rr
      POSTGRES_USER: rr
      POSTGRES_PASSWORD: rr
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rr -d rr"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [testnet]
    ports:
      - "5555:5432"
  localstack:
    build:
      context: docker/e2e
      dockerfile: localstack.Dockerfile
    environment:
      - SERVICES=s3
      - DEBUG=1
    ports:
      - "4566:4566"
    networks:
      - testnet

  api:
    build:
      context: .
      dockerfile: docker/e2e/api.Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: dev, e2e
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/rr
      SPRING_DATASOURCE_USERNAME: rr
      SPRING_DATASOURCE_PASSWORD: rr
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: eu-central-1
      AWS_S3_ENDPOINT: http://localstack:4566
      E2E_ADMIN_USERNAME: e2e_admin
      E2E_ADMIN_PASSWORD: e2e_password_123456
      E2E_ADMIN_EMAIL: e2e_email@gmail.com
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      # Prefer Spring Boot readiness if you expose it:
      # management.endpoint.health.probes.enabled=true
      # then: /actuator/health/readiness
      test: [ "CMD-SHELL", "curl -fsS http://localhost:8080/actuator/health/readiness || curl -fsS http://localhost:8080/actuator/health || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 60
      start_period: 15s

    ports:
      - "8080:8080"
    networks: [testnet]

  ui:
    build:
      context: .
      dockerfile: docker/e2e/ui.Dockerfile
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "4200:443"
    networks: [testnet]

  e2e-tests:
    build:
      context: .
      dockerfile: docker/e2e/tests.Dockerfile
    environment:
      baseUrl: https://ui
      E2E_ADMIN_USERNAME: e2e_admin
      E2E_ADMIN_PASSWORD: e2e_password_123456
      E2E_ADMIN_EMAIL: e2e_email@gmail.com
    depends_on:
      - ui
    networks: [testnet]
    volumes:
      - ./e2e-artifacts:/artifacts

networks:
  testnet:
    driver: bridge
